"""Add party and quest

Revision ID: a89973b35d2c
Revises: 1a31ce608336
Create Date: 2025-09-12 20:21:45.080940

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a89973b35d2c'
down_revision = '1a31ce608336'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('FORMING', 'ACTIVE', 'COMPLETED', 'DISBANDED', name='partystatus').create(op.get_bind())
    sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'WITHDRAWN', 'EXPIRED', name='applicationstatus').create(op.get_bind())
    sa.Enum('RECRUITING', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'EXPIRED', name='queststatus').create(op.get_bind())
    sa.Enum('PUBLIC', 'UNLISTED', 'PRIVATE', name='questvisibility').create(op.get_bind())
    sa.Enum('REMOTE', 'IN_PERSON', 'HYBRID', name='locationtype').create(op.get_bind())
    sa.Enum('GAMING', 'PROFESSIONAL', 'SOCIAL', 'LEARNING', 'CREATIVE', 'FITNESS', 'TRAVEL', name='questcategory').create(op.get_bind())
    sa.Enum('TEXT', 'VOICE', 'VIDEO', 'MIXED', name='communicationstyle').create(op.get_bind())
    sa.Enum('CASUAL', 'MODERATE', 'SERIOUS', 'PROFESSIONAL', name='commitmentlevel').create(op.get_bind())
    op.create_table('quest',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=False),
    sa.Column('category', postgresql.ENUM('GAMING', 'PROFESSIONAL', 'SOCIAL', 'LEARNING', 'CREATIVE', 'FITNESS', 'TRAVEL', name='questcategory', create_type=False), nullable=False),
    sa.Column('party_size_min', sa.Integer(), nullable=False),
    sa.Column('party_size_max', sa.Integer(), nullable=False),
    sa.Column('required_commitment', postgresql.ENUM('CASUAL', 'MODERATE', 'SERIOUS', 'PROFESSIONAL', name='commitmentlevel', create_type=False), nullable=False),
    sa.Column('location_type', postgresql.ENUM('REMOTE', 'IN_PERSON', 'HYBRID', name='locationtype', create_type=False), nullable=False),
    sa.Column('location_detail', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('starts_at', sa.DateTime(), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.Column('estimated_duration', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('visibility', postgresql.ENUM('PUBLIC', 'UNLISTED', 'PRIVATE', name='questvisibility', create_type=False), server_default='PUBLIC', nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('creator_id', sa.Uuid(), nullable=False),
    sa.Column('status', postgresql.ENUM('RECRUITING', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'EXPIRED', name='queststatus', create_type=False), server_default='RECRUITING', nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('party',
    sa.Column('status', postgresql.ENUM('FORMING', 'ACTIVE', 'COMPLETED', 'DISBANDED', name='partystatus', create_type=False), server_default='FORMING', nullable=False),
    sa.Column('chat_channel_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('quest_id', sa.Uuid(), nullable=False),
    sa.Column('formed_at', sa.DateTime(), nullable=False),
    sa.Column('disbanded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['quest_id'], ['quest.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('quest_id')
    )
    op.create_table('questapplication',
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=False),
    sa.Column('proposed_role', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('quest_id', sa.Uuid(), nullable=False),
    sa.Column('applicant_id', sa.Uuid(), nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'APPROVED', 'REJECTED', 'WITHDRAWN', 'EXPIRED', name='applicationstatus', create_type=False), server_default='PENDING', nullable=False),
    sa.Column('applied_at', sa.DateTime(), nullable=False),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('reviewer_feedback', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.ForeignKeyConstraint(['applicant_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['quest_id'], ['quest.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('partymember',
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('is_leader', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('party_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.Column('left_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['party_id'], ['party.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('user', sa.Column('bio', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('user', sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True))
    op.add_column('user', sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True))
    op.add_column('user', sa.Column('preferred_party_size_min', sa.Integer(), nullable=False))
    op.add_column('user', sa.Column('preferred_party_size_max', sa.Integer(), nullable=False))
    op.add_column('user', sa.Column('preferred_commitment_level', postgresql.ENUM('CASUAL', 'MODERATE', 'SERIOUS', 'PROFESSIONAL', name='commitmentlevel', create_type=False), server_default='CASUAL', nullable=False))
    op.add_column('user', sa.Column('communication_style', postgresql.ENUM('TEXT', 'VOICE', 'VIDEO', 'MIXED', name='communicationstyle', create_type=False), server_default='TEXT', nullable=False))
    op.add_column('user', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('user', sa.Column('last_active', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('reputation_score', sa.Numeric(precision=3, scale=2), nullable=False))
    op.add_column('user', sa.Column('total_completed_quests', sa.Integer(), nullable=False))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'total_completed_quests')
    op.drop_column('user', 'reputation_score')
    op.drop_column('user', 'last_active')
    op.drop_column('user', 'created_at')
    op.drop_column('user', 'communication_style')
    op.drop_column('user', 'preferred_commitment_level')
    op.drop_column('user', 'preferred_party_size_max')
    op.drop_column('user', 'preferred_party_size_min')
    op.drop_column('user', 'timezone')
    op.drop_column('user', 'location')
    op.drop_column('user', 'bio')
    op.drop_table('partymember')
    op.drop_table('questapplication')
    op.drop_table('party')
    op.drop_table('quest')
    sa.Enum('CASUAL', 'MODERATE', 'SERIOUS', 'PROFESSIONAL', name='commitmentlevel').drop(op.get_bind())
    sa.Enum('TEXT', 'VOICE', 'VIDEO', 'MIXED', name='communicationstyle').drop(op.get_bind())
    sa.Enum('GAMING', 'PROFESSIONAL', 'SOCIAL', 'LEARNING', 'CREATIVE', 'FITNESS', 'TRAVEL', name='questcategory').drop(op.get_bind())
    sa.Enum('REMOTE', 'IN_PERSON', 'HYBRID', name='locationtype').drop(op.get_bind())
    sa.Enum('PUBLIC', 'UNLISTED', 'PRIVATE', name='questvisibility').drop(op.get_bind())
    sa.Enum('RECRUITING', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'EXPIRED', name='queststatus').drop(op.get_bind())
    sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'WITHDRAWN', 'EXPIRED', name='applicationstatus').drop(op.get_bind())
    sa.Enum('FORMING', 'ACTIVE', 'COMPLETED', 'DISBANDED', name='partystatus').drop(op.get_bind())
    # ### end Alembic commands ###
